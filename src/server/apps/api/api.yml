openapi: 3.0.1
info:
  title: datasetarchiver
  description: datasetarchiver
  version: 1.0.0
servers:
  - url: /crawler/api/v1
tags:
  - name: Datasetarchiver
    description: here you find all options available in v1
paths:
  /file/{url}:
    get:
      summary: Get file by URL
      parameters:
        - in: path
          name: url
          schema:
            type: string
          required: true
          description: reference of the file
      tags:
      - Datasetarchiver
      description:
      responses:
        200:
          description: Returns last version of file by url
  /getFile:
    get:
      parameters:
        - in: query
          name: id
          description: ObjectId of file
          schema:
            type: string
          required: true
        - in: query
          name: as
          description: defines method to get files (stream, zip)
          schema:
            type: string
      tags:
      - Datasetarchiver
      description:
      responses:
        200:
          description: Returns file with specified method default is stream
  /getFiles:
    get:
      parameters:
        - in: query
          name: byType
          description: defines Type of files to get (csv, text/csv, zip, etc..)
          schema:
            type: string
          required: true
        - in: query
          name: as
          description: defines method to get files (zip, stream)
          schema:
            type: string
      tags:
      - Datasetarchiver
      description:
        Gets newest Versions of Files (if stream, files seperated by [FILENAME_START\n[filename]\nFILENAME_END])
      responses:
        200:
          description: Returns files with specified method default is stream (only newest versions)
  /getVersions:
    get:
      parameters:
        - in: query
          name: byType
          description: defines Type of files to get (csv, text/csv, zip, etc..)
          schema:
            type: string
      tags:
      - Datasetarchiver
      description:
      responses:
        '200':
          description: Returns an array of file objects containing the _ids of the versions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/files'
  /getDatasets:
    get:
      parameters:
        - in: query
          name: byType
          description: defines type of datasets to get  (csv, text/csv, zip, etc..)
          schema:
            type: string
      tags:
      - Datasetarchiver
      description:
      responses:
        200:
          description: Returns array of datasets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dataset'
  /dumpLastVersions:
    get:
      parameters:
        - in: query
          name: byType
          description: defines type of datasets to get  (csv, text/csv, zip, etc..)
          schema:
            type: string
      tags:
      - Datasetarchiver
      description:
      responses:
        200:
          description: Downloads a zip file containing all files and a meta.json file
  /getDataset:
    get:
      parameters:
        - in: query
          name: id
          description: ObjectId of dataset
          schema:
            type: string
          required: true
      tags:
      - Datasetarchiver
      description:
      responses:
        200:
          description: Returns dataset
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
  /crawlID:
    post:
      parameters:
        - in: query
          name: id
          description: Crawls the id which links to the data
          schema:
            type: string
          required: true
        - in: query
          name: secret
          description: Ask thomas for the secret
          schema:
            type: string
          required: true
      tags:
      - Datasetarchiver
      description: crawl id
      responses:
        200:
          description: Returns a boolean if crawl started
  /addHref:
    post:
      parameters:
        - in: query
          name: href
          description: The href which links to the data
          schema:
            type: string
          required: true
        - in: query
          name: source
          description: The source of the href provided
          schema:
            type: string
        - in: query
          name: filename
          description: The name of the file provided
          schema:
            type: string
        - in: query
          name: filytype
          description: The type of the file provided
          schema:
            type: string
        - in: query
          name: secret
          description: Ask thomas for the secret
          schema:
            type: string
          required: true
      tags:
      - Datasetarchiver
      description: TODO make it a json request
      responses:
        200:
          description: Returns an object of what has been added
          content: {}
  /addManyHrefs:
    post:
      parameters:
        - in: query
          name: hrefs
          description: The href which links to the data
          schema:
            oneOf:
              - type: array
              - type: object
              - type: string
          required: true
        - in: query
          name: secret
          description: Ask thomas for the secret
          schema:
            type: string
          required: true
      tags:
      - Datasetarchiver
      description: TODO make it a json request
      responses:
        200:
          description: Returns an object of what has been added
          content: {}
  /addResources:
    post:
      summary: add many resources
      parameters:
        - in: query
          name: secret
          description: Ask thomas for the secret
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/resources'
      tags:
      - Datasetarchiver
      description:
      responses:
        200:
          description: Returns array with booleans


components:
  schemas:
    Dataset:
      title: dataset
      required:
      - name
      type: object
      properties:
        _id:
          type: string
        id:
          type: string
        meta:
          type: object
          $ref: '#/components/examples/meta'
        crawl_info:
          type: object
          $ref: '#/components/examples/crawl_info'
        versions:
          type: array
          $ref: '#/components/examples/versions'
        url:
          type: object
    file:
      title: file
      type: object
      properties:
        file_ids:
          type: array
          $ref: '#/components/examples/versions'
        meta:
          type: object
          $ref: '#/components/examples/meta'
        dataset_id:
          type: string
      description: The file_ids array holds all ids of versions of the dataset ([0] is oldest).
    files:
      type: array
      items:
        type: object
        $ref: '#/components/schemas/file'
      title: files
    resource:
      title: resource
      type: object
      properties:
        href:
          type: string
        source:
          type: string
        format:
          type: string
    resources:
      type: array
      items:
        type: object
        $ref: '#/components/schemas/resource'
      title: resources
  examples:
    crawl_info:
      title: crawl_info
      type: object
      properties:
        firstCrawl:
          type: boolean
        crawlInterval:
          type: number
        nextCrawl:
          type: string
        lastCrawlAttempt:
          type: string
        stopped:
          type: boolean
        errorCount:
          type: number
        errorStore:
          type: array
          items:
            type: object
        changeDistribution:
          type: array
          items:
            type: object
    meta:
      title: meta
      type: object
      properties:
        versionCount:
          type: number
        filetype:
          type: string
        filename:
          type: string
        insertDate:
          type: string
        source:
          type: array
          items:
            type: object
    versions:
      title: versions
      type: array
      items:
        type: string
      uniqueItems: true

